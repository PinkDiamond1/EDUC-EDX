name: Schools - Primary Code Onboarding

env:
  # üñäÔ∏è EDIT your repository secrets to log into your OpenShift cluster and set up the context.
  # See https://github.com/redhat-actions/oc-login#readme for how to retrieve these values.
  # To get a permanent token, refer to https://github.com/redhat-actions/oc-login/wiki/Using-a-Service-Account-for-GitHub-Actions
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  # üñäÔ∏è EDIT to set the kube context's namespace after login. Leave blank to use your user's default namespace.
  OPENSHIFT_NAMESPACE: ${{ secrets.EDX_NAMESPACE_NO_ENV }}-dev

  SOAM_CLIENT_ID: ${{ secrets.SOAM_CLIENT_ID }}
  SOAM_CLIENT_SECRET: ${{ secrets.SOAM_CLIENT_SECRET }}
  SOAM_TOKEN_URL: ${{ secrets.SOAM_TOKEN_URL }}

  SCHOOL_SERVICE_URL: ${{ secrets.SCHOOL_SERVICE_URL }}
  EDX_SERVICE_URL: ${{ secrets.EDX_SERVICE_URL }}

  CHES_CLIENT_ID: ${{ secrets.CHES_CLIENT_ID }}
  CHES_CLIENT_SECRET: ${{ secrets.CHES_CLIENT_SECRET }}
  CHES_TOKEN_URL: ${{ secrets.CHES_TOKEN_URL }}
  CHES_EMAIL_URL: ${{ secrets.CHES_EMAIL_URL }}
on:
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows
  workflow_dispatch:

jobs:
  openshift-ci-cd:
    name: Send out initial onboarding primary codes for schools
    # ubuntu-20.04 can also be used.
    runs-on: ubuntu-18.04
    environment: dev

    outputs:
      ROUTE: ${{ steps.deploy-and-expose.outputs.route }}
      SELECTOR: ${{ steps.deploy-and-expose.outputs.selector }}

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Install oc
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: 4

    - uses: actions/checkout@v2
    - name: Send Messages to Schools
      run: |
        set -eu
        # Login to OpenShift and select project
        oc login --token=${{ env.OPENSHIFT_TOKEN }} --server=${{ env.OPENSHIFT_SERVER }}
        oc project ${{ env.OPENSHIFT_NAMESPACE }}
        TOKEN=$(curl -d "client_id=${{ env.SOAM_CLIENT_ID }}" -d "client_secret=${{ env.SOAM_CLIENT_SECRET }}" -d "grant_type=client_credentials" "${{ env.SOAM_TOKEN_URL }}" | jq -r '.access_token')
        
        SCHOOLS=$(curl -sX GET "${{ env.SCHOOL_SERVICE_URL }}/api/v1/schools" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $TOKEN")

        echo "$SCHOOLS" | jq -c '.[]' | while read CUR_SCHOOL; do
            SCHOOL_STATUS=$(echo $CUR_SCHOOL | jq -r '.schoolStatusCode')
            SCHOOL_MINCODE=$(echo $CUR_SCHOOL | jq -r '(.distNo + .schlNo)')

            if [[ "$SCHOOL_STATUS" == "O" ]]
            then
              SCHOOL_NAME=$(echo $CUR_SCHOOL | jq -r '.schoolName')
              COORDINATOR=$(curl -sX GET "${{ env.SCHOOL_SERVICE_URL }}/api/v1/schools/$SCHOOL_MINCODE/pen-coordinator" \
                -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN");

              echo Marco 1
              NAME=$(echo $COORDINATOR | jq -r '.penCoordinatorName')
              EMAIL=$(echo $COORDINATOR | jq -r '.penCoordinatorEmail')

              echo Marco 2

              ACTIVATION_CODE=$(curl -sX POST "https://edx-api-d4cdde-dev.apps.silver.devops.gov.bc.ca/api/v1/edx/users/activation-code/primary/$SCHOOL_MINCODE" \
                -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -d "{\"createUser\": \"ONBOARD\",  \"updateUser\": \"ONBOARD\", \"mincode\": \"$SCHOOL_MINCODE\"}" | jq -r '.activationCode')

              echo Marco 3
        
              CHES_TOKEN=$(curl -d "client_id=${{ env.CHES_CLIENT_ID }}" -d "client_secret=${{ env.CHES_CLIENT_SECRET }}" -d "grant_type=client_credentials" "${{ env.CHES_TOKEN_URL }}" | jq -r '.access_token')

              echo Marco 4
              curl -sX POST "${{ env.CHES_EMAIL_URL }}" \
                -H "Content-Type: application/json" \
                -H "Authorization: Bearer $CHES_TOKEN" \
                -d "{\"bodyType\": \"html\", \"body\": \"<p>Hi $NAME,<br><br>Here is the <b>Primary Access Code</b> for the <b>Education Data Exchange (EDX)</b> for:<br><br> $SCHOOL_MINCODE - $SCHOOL_NAME: <b>$ACTIVATION_CODE</b></p><p>Please record the code and keep it safe, as it will be required for EDX account activation for each user at your school.</p><p>Regards,</p><p>The Ministry of Education and Child Care's EDX Team</p>\", \"encoding\": \"utf-8\", \"from\": \"noreply-edx@gov.bc.ca\", \"priority\": \"normal\", \"subject\": \"Primary Access Code for Education Data Exchange\", \"to\": [\"$EMAIL\"]}"

              echo Email sent to $SCHOOL_MINCODE - $SCHOOL_NAME 

              break
          fi

        done